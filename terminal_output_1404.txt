<<<<<<< aa674a756c31616686e87b608e54c52b8c79e9a3
version https://git-lfs.github.com/spec/v1
oid sha256:b046b087bfcb1afff4003a3abaca7f4a214c565b0dcdac17055a94fd58c1fab6
size 100566
=======
>>>>>>> Round = 1
[INFO] START SMOTE algo with rate = 4 for 1215 samples
[INFO] DONE SMOTE algo, generate more 4860
# Tuning hyper-parameters for f1
()
Fitting 3 folds for each of 140 candidates, totalling 420 fits
Best parameters set found on development set of optimizing f1:
()
{'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
()
Grid scores on development set of optimizing f1:
()
0.954 (+/-0.011) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.956 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.958 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.958 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.960 (+/-0.005) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.961 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.962 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.965 (+/-0.006) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.966 (+/-0.006) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.967 (+/-0.006) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.968 (+/-0.005) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.968 (+/-0.005) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.969 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.969 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.968 (+/-0.005) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.969 (+/-0.006) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.970 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.971 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.972 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.971 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.971 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.958 (+/-0.010) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.959 (+/-0.009) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.961 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.962 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.964 (+/-0.005) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.965 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.965 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.963 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.965 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.966 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.968 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.969 (+/-0.006) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.969 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.969 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.967 (+/-0.005) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.969 (+/-0.006) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.970 (+/-0.005) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.971 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.972 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.966 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.967 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.969 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.969 (+/-0.006) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.969 (+/-0.005) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.969 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.969 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.969 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.969 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.971 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.971 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.971 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.971 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.970 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.969 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.970 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.972 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.970 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.971 (+/-0.006) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.970 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.972 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.971 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.972 (+/-0.006) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
()
Detailed classification report of optimizing f1:
()
The model is trained on the full development set.
The scores are computed on the full evaluation set.
()
             precision    recall  f1-score   support

          0       0.96      0.97      0.97      2180
          1       0.81      0.75      0.78       322

avg / total       0.94      0.95      0.94      2502

()
[[2125   55]
 [  81  241]]
>>>>>>> Round = 2
[INFO] START SMOTE algo with rate = 4 for 1203 samples
[INFO] DONE SMOTE algo, generate more 4812
# Tuning hyper-parameters for f1
()
Fitting 3 folds for each of 140 candidates, totalling 420 fits
Best parameters set found on development set of optimizing f1:
()
{'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
()
Grid scores on development set of optimizing f1:
()
0.951 (+/-0.010) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.953 (+/-0.009) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.955 (+/-0.010) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.957 (+/-0.009) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.958 (+/-0.009) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.959 (+/-0.009) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.959 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.962 (+/-0.012) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.964 (+/-0.012) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.965 (+/-0.010) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.967 (+/-0.010) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.968 (+/-0.009) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.969 (+/-0.010) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.969 (+/-0.011) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.967 (+/-0.006) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.968 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.970 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.972 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.972 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.973 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.957 (+/-0.011) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.959 (+/-0.010) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.960 (+/-0.009) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.961 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.962 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.963 (+/-0.009) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.963 (+/-0.009) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.962 (+/-0.009) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.964 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.965 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.966 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.967 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.968 (+/-0.010) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.968 (+/-0.011) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.968 (+/-0.010) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.969 (+/-0.011) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.970 (+/-0.010) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.969 (+/-0.010) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.970 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.970 (+/-0.009) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.971 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.972 (+/-0.006) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.972 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.972 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.973 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.972 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.964 (+/-0.010) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.966 (+/-0.009) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.967 (+/-0.009) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.968 (+/-0.009) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.969 (+/-0.009) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.969 (+/-0.010) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.969 (+/-0.011) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.967 (+/-0.008) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.969 (+/-0.009) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.969 (+/-0.010) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.969 (+/-0.010) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.970 (+/-0.008) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.970 (+/-0.008) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.970 (+/-0.010) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.970 (+/-0.009) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.972 (+/-0.007) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.972 (+/-0.007) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.971 (+/-0.007) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.972 (+/-0.007) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.972 (+/-0.007) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.969 (+/-0.009) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.969 (+/-0.010) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.969 (+/-0.009) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.970 (+/-0.008) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.970 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.972 (+/-0.007) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.972 (+/-0.009) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.971 (+/-0.010) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.971 (+/-0.007) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.972 (+/-0.007) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.972 (+/-0.007) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.971 (+/-0.007) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.971 (+/-0.007) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.972 (+/-0.007) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.971 (+/-0.007) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.971 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.972 (+/-0.009) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.972 (+/-0.008) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.971 (+/-0.009) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
()
Detailed classification report of optimizing f1:
()
The model is trained on the full development set.
The scores are computed on the full evaluation set.
()
             precision    recall  f1-score   support

          0       0.97      0.97      0.97      2168
          1       0.83      0.80      0.82       334

avg / total       0.95      0.95      0.95      2502

()
[[2113   55]
 [  66  268]]
>>>>>>> Round = 3
[INFO] START SMOTE algo with rate = 4 for 1235 samples
[INFO] DONE SMOTE algo, generate more 4940
# Tuning hyper-parameters for f1
()
Fitting 3 folds for each of 140 candidates, totalling 420 fits
Best parameters set found on development set of optimizing f1:
()
{'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
()
Grid scores on development set of optimizing f1:
()
0.950 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.951 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.954 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.956 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.958 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.958 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.959 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.961 (+/-0.009) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.963 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.964 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.966 (+/-0.009) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.967 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.968 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.968 (+/-0.008) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.968 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.969 (+/-0.005) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.970 (+/-0.005) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.971 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.971 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.955 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.957 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.958 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.960 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.961 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.962 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.963 (+/-0.007) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.960 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.962 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.964 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.966 (+/-0.009) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.967 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.967 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.967 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.967 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.968 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.970 (+/-0.009) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.971 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.970 (+/-0.006) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.971 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.971 (+/-0.006) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.971 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.972 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.971 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.964 (+/-0.009) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.965 (+/-0.009) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.966 (+/-0.008) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.967 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.968 (+/-0.006) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.969 (+/-0.006) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.969 (+/-0.007) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.967 (+/-0.007) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.968 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.970 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.970 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.970 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.970 (+/-0.007) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.970 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.972 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.968 (+/-0.008) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.969 (+/-0.007) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.970 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.971 (+/-0.006) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.971 (+/-0.006) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.972 (+/-0.006) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.972 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.971 (+/-0.006) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.971 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.972 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
()
Detailed classification report of optimizing f1:
()
The model is trained on the full development set.
The scores are computed on the full evaluation set.
()
             precision    recall  f1-score   support

          0       0.97      0.98      0.97      2199
          1       0.82      0.74      0.78       302

avg / total       0.95      0.95      0.95      2501

()
[[2151   48]
 [  78  224]]
>>>>>>> Round = 4
[INFO] START SMOTE algo with rate = 4 for 1288 samples
[INFO] DONE SMOTE algo, generate more 5152
# Tuning hyper-parameters for f1
()
Fitting 3 folds for each of 140 candidates, totalling 420 fits
Best parameters set found on development set of optimizing f1:
()
{'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
()
Grid scores on development set of optimizing f1:
()
0.954 (+/-0.001) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.956 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.958 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.959 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.960 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.961 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.962 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.966 (+/-0.001) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.967 (+/-0.001) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.968 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.969 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.970 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.970 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.970 (+/-0.005) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.970 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.971 (+/-0.001) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.973 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.958 (+/-0.001) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.959 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.961 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.962 (+/-0.001) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.964 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.964 (+/-0.005) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.965 (+/-0.006) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.964 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.966 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.967 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.969 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.970 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.970 (+/-0.005) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.969 (+/-0.005) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.969 (+/-0.001) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.970 (+/-0.000) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.971 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.974 (+/-0.001) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.974 (+/-0.001) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.975 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.966 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.968 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.969 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.970 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.970 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.971 (+/-0.005) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.970 (+/-0.005) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.969 (+/-0.001) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.970 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.971 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.972 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.971 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.973 (+/-0.001) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.973 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.974 (+/-0.001) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.974 (+/-0.001) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.975 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.969 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.970 (+/-0.001) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.972 (+/-0.001) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.973 (+/-0.001) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.975 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.973 (+/-0.001) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.974 (+/-0.001) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.975 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.976 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.974 (+/-0.001) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.974 (+/-0.001) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.975 (+/-0.001) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.975 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.975 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.973 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.973 (+/-0.001) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.974 (+/-0.001) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.974 (+/-0.001) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.974 (+/-0.001) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.975 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.975 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.976 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.976 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.974 (+/-0.001) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.976 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.976 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.974 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.976 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.976 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.974 (+/-0.001) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.974 (+/-0.001) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.976 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.976 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.975 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
()
Detailed classification report of optimizing f1:
()
The model is trained on the full development set.
The scores are computed on the full evaluation set.
()
             precision    recall  f1-score   support

          0       0.97      0.97      0.97      2252
          1       0.70      0.70      0.70       249

avg / total       0.94      0.94      0.94      2501

()
[[2178   74]
 [  75  174]]
>>>>>>> Round = 5
[INFO] START SMOTE algo with rate = 4 for 1207 samples
[INFO] DONE SMOTE algo, generate more 4828
# Tuning hyper-parameters for f1
()
Fitting 3 folds for each of 140 candidates, totalling 420 fits
Best parameters set found on development set of optimizing f1:
()
{'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
()
Grid scores on development set of optimizing f1:
()
0.953 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.954 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.957 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.959 (+/-0.005) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.960 (+/-0.006) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.961 (+/-0.006) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.961 (+/-0.005) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.965 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.967 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.969 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.969 (+/-0.001) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.970 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.971 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.970 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.970 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.971 (+/-0.001) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.959 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.960 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.962 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.964 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.964 (+/-0.004) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.965 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.966 (+/-0.003) for {'kernel': 'rbf', 'C': 1, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.963 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.964 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.966 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.967 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.969 (+/-0.000) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.970 (+/-0.000) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.970 (+/-0.000) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.970 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.971 (+/-0.001) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.966 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.968 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.969 (+/-0.001) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.970 (+/-0.001) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.971 (+/-0.002) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.971 (+/-0.000) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.971 (+/-0.001) for {'kernel': 'rbf', 'C': 2, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.970 (+/-0.000) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.970 (+/-0.001) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.972 (+/-0.001) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.973 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.972 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.972 (+/-0.002) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.970 (+/-0.001) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.972 (+/-0.001) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 4, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.972 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.972 (+/-0.002) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.973 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.974 (+/-0.006) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 8, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 1}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 1}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 1}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 1}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 1}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 1}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 1}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 2}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 2}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 2}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 2}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 2}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': {1: 8}}
0.973 (+/-0.002) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': {1: 8}}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': {1: 8}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': {1: 8}}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': {1: 8}}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': {1: 8}}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': {1: 8}}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0023226701464896895, 'class_weight': 'balanced'}
0.973 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0027621358640099515, 'class_weight': 'balanced'}
0.974 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0032847516220848223, 'class_weight': 'balanced'}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.00390625, 'class_weight': 'balanced'}
0.974 (+/-0.004) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.004645340292979379, 'class_weight': 'balanced'}
0.974 (+/-0.005) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.005524271728019903, 'class_weight': 'balanced'}
0.973 (+/-0.003) for {'kernel': 'rbf', 'C': 16, 'decision_function_shape': 'ovr', 'gamma': 0.0065695032441696445, 'class_weight': 'balanced'}
()
Detailed classification report of optimizing f1:
()
The model is trained on the full development set.
The scores are computed on the full evaluation set.
()
             precision    recall  f1-score   support

          0       0.96      0.98      0.97      2171
          1       0.82      0.75      0.78       330

avg / total       0.94      0.95      0.94      2501

()
[[2118   53]
 [  84  246]]
>>>>>>> Add more experimental results
